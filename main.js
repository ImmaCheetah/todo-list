(()=>{"use strict";function t(){const t=document.getElementById("main-form"),e=t.elements["task-title"],n=t.elements["task-description"],o=t.elements["task-due-date"],s=t.elements["task-priority"];let a=e.value,i=n.value,d=o.value,l=s.value;return console.log(a),console.log("dom works"),{taskTitle:a,taskDescription:i,taskDueDate:d,taskPriority:l}}function e(t,e,n,o){let s=!1;t=t.toString(),e=e.toString();const a=t=>{o=t};return{get title(){return t},get description(){return e},get dueDate(){return n},get priority(){return o},getCompleteState:()=>s,setComplete:()=>{s=!0},changePriority:a,editTask:(o,s,i,d)=>{t=o,e=s,n=i,a(d)},printTask:()=>{console.log(`Task title - ${t}, Desc - ${e}, Date - ${n}, Priority - ${o}`)}}}function n(t){let e=[];return{title:t,tasks:e,addTask:t=>{e.push(t)},displayTasks:()=>{for(let t=0;t<e.length;t++)console.log(`Task ${t} - ${e[t].title}, ${e[t].dueDate}, ${e[t].priority}`)},deleteTask:t=>{e.splice(t,1)}}}const o=n("Inbox"),s=e("chores","wash dishes","nov 23","high"),a=e("movies","avatar","nov 29","med"),i=e("coding","todo list","dec 10","low"),d=n("project 1");n("project 2"),s.editTask("new thing","another new thing","new date","HIGH"),d.addTask(s),s.printTask(),d.addTask(a),o.addTask(i),o.displayTasks();const l=document.getElementById("task-add-btn"),r=document.getElementById("task-dialog");document.getElementById("folder-dialog"),r.show(),l.addEventListener("click",(function(){const{taskTitle:n,taskDescription:o,taskDueDate:s,taskPriority:a}=t(),i=e(n,o,s,a);console.log(i.printTask())})),t(),o.displayTasks(),function(t){const e=document.createElement("div"),n=document.createElement("p"),o=document.createElement("p"),s=document.createElement("p"),a=document.createElement("p");e.classList.add("task-div"),n.textContent=t.title,o.textContent=t.description,s.textContent=t.dueDate,a.textContent=t.priority,e.appendChild(n),e.appendChild(o),e.appendChild(s),e.appendChild(a)}(s)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QVNxRCxjQUFjLEtBRWpERCxFQUFRTSxVQUFVQyxJQUFJLFlBQ3RCTCxFQUFlTSxZQUFjVCxFQUFTcEMsTUFDdEN3QyxFQUFxQkssWUFBY1QsRUFBU25DLFlBQzVDd0MsRUFBaUJJLFlBQWNULEVBQVNsQyxRQUN4Q3dDLEVBQWtCRyxZQUFjVCxFQUFTakMsU0FFekNrQyxFQUFRUyxZQUFZUCxHQUNwQkYsRUFBUVMsWUFBWU4sR0FDcEJILEVBQVFTLFlBQVlMLEdBQ3BCSixFQUFRUyxZQUFZSixFQUV4QixDQzZGQUssQ0FBa0JwQixFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vc3JjL21vZHVsZXMvZG9tLmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBkaXNwbGF5Rm9sZGVyVGFza3MoZm9sZGVyTmFtZSkge1xuICAgIGZvbGRlck5hbWUuZGlzcGxheVRhc2tzKCk7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZVRhc2tFbGVtZW50KHRhc2tOYW1lKSB7XG4gICAgY29uc3QgdGFza0RpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIGNvbnN0IHRhc2tUaXRsZUluRGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgncCcpO1xuICAgIGNvbnN0IHRhc2tEZXNjcmlwdGlvbkluRGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgncCcpO1xuICAgIGNvbnN0IHRhc2tEdWVEYXRlSW5EaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwJyk7XG4gICAgY29uc3QgdGFza1ByaW9yaXR5SW5EaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwJyk7XG5cbiAgICB0YXNrRGl2LmNsYXNzTGlzdC5hZGQoJ3Rhc2stZGl2Jyk7XG4gICAgdGFza1RpdGxlSW5EaXYudGV4dENvbnRlbnQgPSB0YXNrTmFtZS50aXRsZTtcbiAgICB0YXNrRGVzY3JpcHRpb25JbkRpdi50ZXh0Q29udGVudCA9IHRhc2tOYW1lLmRlc2NyaXB0aW9uO1xuICAgIHRhc2tEdWVEYXRlSW5EaXYudGV4dENvbnRlbnQgPSB0YXNrTmFtZS5kdWVEYXRlO1xuICAgIHRhc2tQcmlvcml0eUluRGl2LnRleHRDb250ZW50ID0gdGFza05hbWUucHJpb3JpdHk7XG5cbiAgICB0YXNrRGl2LmFwcGVuZENoaWxkKHRhc2tUaXRsZUluRGl2KTtcbiAgICB0YXNrRGl2LmFwcGVuZENoaWxkKHRhc2tEZXNjcmlwdGlvbkluRGl2KTtcbiAgICB0YXNrRGl2LmFwcGVuZENoaWxkKHRhc2tEdWVEYXRlSW5EaXYpO1xuICAgIHRhc2tEaXYuYXBwZW5kQ2hpbGQodGFza1ByaW9yaXR5SW5EaXYpO1xuXG59XG5cbmZ1bmN0aW9uIGFwcGVuZFRhc2sodGFza0VsZW1lbnQsIGxvY2F0aW9uKSB7XG5cbn1cblxuZnVuY3Rpb24gZ2V0Rm9ybUluZm8oKSB7XG4gICAgY29uc3QgZm9ybSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdtYWluLWZvcm0nKTtcblxuICAgIGNvbnN0IHRhc2tUaXRsZUluRm9ybSA9IGZvcm0uZWxlbWVudHNbJ3Rhc2stdGl0bGUnXTtcbiAgICBjb25zdCB0YXNrRGVzY3JpcHRpb25JbkZvcm0gPSBmb3JtLmVsZW1lbnRzWyd0YXNrLWRlc2NyaXB0aW9uJ107XG4gICAgY29uc3QgdGFza0R1ZURhdGVJbkZvcm0gPSBmb3JtLmVsZW1lbnRzWyd0YXNrLWR1ZS1kYXRlJ107XG4gICAgY29uc3QgdGFza1ByaW9yaXR5SW5Gb3JtID0gZm9ybS5lbGVtZW50c1sndGFzay1wcmlvcml0eSddO1xuICAgIFxuICAgIGxldCB0YXNrVGl0bGUgPSB0YXNrVGl0bGVJbkZvcm0udmFsdWU7XG4gICAgbGV0IHRhc2tEZXNjcmlwdGlvbiA9IHRhc2tEZXNjcmlwdGlvbkluRm9ybS52YWx1ZTtcbiAgICBsZXQgdGFza0R1ZURhdGUgPSB0YXNrRHVlRGF0ZUluRm9ybS52YWx1ZTtcbiAgICBsZXQgdGFza1ByaW9yaXR5ID0gdGFza1ByaW9yaXR5SW5Gb3JtLnZhbHVlO1xuXG4gICAgY29uc29sZS5sb2codGFza1RpdGxlKVxuICAgIGNvbnNvbGUubG9nKCdkb20gd29ya3MnKTtcbiAgICBcbiAgICByZXR1cm4ge3Rhc2tUaXRsZSwgdGFza0Rlc2NyaXB0aW9uLCB0YXNrRHVlRGF0ZSwgdGFza1ByaW9yaXR5fTtcbn0gXG4gICAgXG5cblxuZnVuY3Rpb24gYWRkVGFza1RvRG9tKHRpdGxlLCBkZXNjLCBkYXRlLCBwcmlvcml0eSkge1xuICAgIGNvbnN0IHRlc3REaXYgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndGFzay1jb250YWluZXInKTtcblxuICAgIHRpdGxlID0gdGFza1RpdGxlO1xuICAgIHRlc3REaXYudGV4dENvbnRlbnQgPSB0aXRsZTtcbn1cblxuXG4vLyBhZGQgZm9sZGVyIGJ1dHRvblxuLy8gLSB3aGVuIGNsaWNrZWQsIGNyZWF0ZSBkaWFsb2cgbW9kYWxcbi8vIC0gZ2V0IGlucHV0IGZyb20gdXNlclxuLy8gLSBzYXZlIGlucHV0IHZhbHVlIHdoZW4gYWRkIGlzIGNsaWNrZWRcbi8vIC0gdXNlIHNhdmVkIHZhbHVlIHRvIGNyZWF0ZSBmb2xkZXIgb24gc2lkZWJhclxuXG5mdW5jdGlvbiBnZXRGb2xkZXJEaWFsb2coKSB7XG4gICAgY29uc3QgZm9sZGVyRGlhbG9nID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2ZvbGRlci1kaWFsb2cnKTtcblxuICAgIHJldHVybiBmb2xkZXJEaWFsb2c7XG59XG5cbmZ1bmN0aW9uIHNob3dGb2xkZXJEaWFsb2coKSB7XG4gICAgZ2V0Rm9sZGVyRGlhbG9nKCk7XG4gICAgZm9sZGVyRGlhbG9nLnNob3coKTtcbn1cblxuZnVuY3Rpb24gZ2V0Rm9sZGVyRm9ybUluZm8oKSB7XG4gICAgY29uc3QgZm9sZGVyRm9ybSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdmb2xkZXItZm9ybScpO1xuXG4gICAgY29uc3QgZm9sZGVyVGl0bGVJbkZvcm0gPSBmb3JtLmVsZW1lbnRzWydmb2xkZXItdGl0bGUnXTtcblxuICAgIHJldHVybiB7Zm9sZGVyRm9ybSwgZm9sZGVyVGl0bGVJbkZvcm19O1xufVxuXG5mdW5jdGlvbiBhZGRGb2xkZXIodGl0bGVWYWx1ZSkge1xuICAgIGNvbnN0IGZvbGRlckRpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIFxufVxuXG5cbmV4cG9ydCB7XG4gICAgZ2V0Rm9ybUluZm8sXG4gICAgYWRkVGFza1RvRG9tLFxuICAgIGNyZWF0ZVRhc2tFbGVtZW50LFxuICAgIGRpc3BsYXlGb2xkZXJUYXNrc1xufSIsImltcG9ydCB7XG4gICAgZ2V0Rm9ybUluZm8sXG4gICAgYWRkVGFza1RvRG9tLFxuICAgIGNyZWF0ZVRhc2tFbGVtZW50LFxuICAgIGRpc3BsYXlGb2xkZXJUYXNrc1xufSBmcm9tICcuL21vZHVsZXMvZG9tLmpzJztcblxuLy8gRmFjdG9yeSBmdW5jdGlvbiB0byBjcmVhdGUgYSB0b2RvIHRhc2tcbmZ1bmN0aW9uIFRhc2sodGl0bGUsIGRlc2NyaXB0aW9uLCBkdWVEYXRlLCBwcmlvcml0eSkge1xuXG4gICAgbGV0IGNvbXBsZXRlU3RhdGUgPSBmYWxzZTtcblxuICAgIGNvbnN0IGdldENvbXBsZXRlU3RhdGUgPSAoKSA9PiBjb21wbGV0ZVN0YXRlO1xuXG4gICAgY29uc3Qgc2V0Q29tcGxldGUgPSAoKSA9PiB7XG4gICAgICAgIGNvbXBsZXRlU3RhdGUgPSB0cnVlO1xuICAgIH1cbiAgICB0aXRsZSA9IHRpdGxlLnRvU3RyaW5nKCk7XG4gICAgZGVzY3JpcHRpb24gPSBkZXNjcmlwdGlvbi50b1N0cmluZygpO1xuXG4gICAgY29uc3QgY2hhbmdlUHJpb3JpdHkgPSAobmV3UHJpb3JpdHkpID0+IHtcbiAgICAgICAgcHJpb3JpdHkgPSBuZXdQcmlvcml0eTtcbiAgICB9XG5cbiAgICBjb25zdCBlZGl0VGFzayA9IChuZXdUaXRsZSwgbmV3RGVzY3JpcHRpb24sIG5ld0R1ZURhdGUsIG5ld1ByaW9yaXR5KSA9PiB7XG4gICAgICAgIHRpdGxlID0gbmV3VGl0bGU7XG4gICAgICAgIGRlc2NyaXB0aW9uID0gbmV3RGVzY3JpcHRpb247XG4gICAgICAgIGR1ZURhdGUgPSBuZXdEdWVEYXRlO1xuICAgICAgICBjaGFuZ2VQcmlvcml0eShuZXdQcmlvcml0eSk7XG4gICAgfVxuXG4gICAgY29uc3QgcHJpbnRUYXNrID0gKCkgPT4ge1xuICAgICAgICBjb25zb2xlLmxvZyhgVGFzayB0aXRsZSAtICR7dGl0bGV9LCBEZXNjIC0gJHtkZXNjcmlwdGlvbn0sIERhdGUgLSAke2R1ZURhdGV9LCBQcmlvcml0eSAtICR7cHJpb3JpdHl9YCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHtcbiAgICAgICAgZ2V0IHRpdGxlKCkge3JldHVybiB0aXRsZX0sIFxuICAgICAgICBnZXQgZGVzY3JpcHRpb24oKSB7cmV0dXJuIGRlc2NyaXB0aW9ufSwgXG4gICAgICAgIGdldCBkdWVEYXRlKCkge3JldHVybiBkdWVEYXRlfSwgXG4gICAgICAgIGdldCBwcmlvcml0eSgpIHtyZXR1cm4gcHJpb3JpdHl9LFxuICAgICAgICBnZXRDb21wbGV0ZVN0YXRlLFxuICAgICAgICBzZXRDb21wbGV0ZSwgXG4gICAgICAgIGNoYW5nZVByaW9yaXR5LFxuICAgICAgICBlZGl0VGFzayxcbiAgICAgICAgcHJpbnRUYXNrXG4gICAgfTtcbn07XG5cblxuZnVuY3Rpb24gRm9sZGVyKHRpdGxlKSB7XG4gICAgbGV0IHRhc2tzID0gW107XG5cbiAgICBjb25zdCBhZGRUYXNrID0gKG5ld1Rhc2tOYW1lKSA9PiB7XG4gICAgICAgIHRhc2tzLnB1c2gobmV3VGFza05hbWUpO1xuICAgIH1cblxuICAgIGNvbnN0IGRpc3BsYXlUYXNrcyA9ICgpID0+IHtcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0YXNrcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgY29uc29sZS5sb2coYFRhc2sgJHtpfSAtICR7dGFza3NbaV0udGl0bGV9LCAke3Rhc2tzW2ldLmR1ZURhdGV9LCAke3Rhc2tzW2ldLnByaW9yaXR5fWApO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgY29uc3QgZGVsZXRlVGFzayA9IChpbmRleCkgPT4ge1xuICAgICAgICB0YXNrcy5zcGxpY2UoaW5kZXgsIDEpO1xuICAgIH1cblxuICAgIFxuICAgIHJldHVybiB7dGl0bGUsIHRhc2tzLCBhZGRUYXNrLCBkaXNwbGF5VGFza3MsIGRlbGV0ZVRhc2t9O1xufVxuXG4vLyBNYWluIEZvbGRlciB0aGF0IHRhc2tzIHdpbGwgZ28gaW50b1xuY29uc3QgbWFpbkZvbGRlciA9IEZvbGRlcignSW5ib3gnKTtcblxuLy8gVGVzdCB0YXNrc1xuY29uc3QgdGFzazEgPSBUYXNrKCdjaG9yZXMnLCAnd2FzaCBkaXNoZXMnLCAnbm92IDIzJywgJ2hpZ2gnKTtcbmNvbnN0IHRhc2syID0gVGFzaygnbW92aWVzJywgJ2F2YXRhcicsICdub3YgMjknLCAnbWVkJyk7XG5jb25zdCB0YXNrMyA9IFRhc2soJ2NvZGluZycsICd0b2RvIGxpc3QnLCAnZGVjIDEwJywgJ2xvdycpO1xuXG4vLyBUZXN0IGZvbGRlcnNcbmNvbnN0IHByb2oxID0gRm9sZGVyKFwicHJvamVjdCAxXCIpO1xuY29uc3QgcHJvajIgPSBGb2xkZXIoJ3Byb2plY3QgMicpO1xuXG50YXNrMS5lZGl0VGFzaygnbmV3IHRoaW5nJywgJ2Fub3RoZXIgbmV3IHRoaW5nJywgJ25ldyBkYXRlJywgJ0hJR0gnKTtcbi8vIGNvbnNvbGUubG9nKHByb2oxLnRhc2tzWzBdLnByaW50VGFzaygpKTtcblxuLy8gVGVzdGluZyBmdW5jdGlvbmFsaXRpZXNcbnByb2oxLmFkZFRhc2sodGFzazEpO1xudGFzazEucHJpbnRUYXNrKCk7XG5wcm9qMS5hZGRUYXNrKHRhc2syKTtcbm1haW5Gb2xkZXIuYWRkVGFzayh0YXNrMyk7XG5tYWluRm9sZGVyLmRpc3BsYXlUYXNrcygpO1xuXG5cbmNvbnN0IGFkZEJ0biA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd0YXNrLWFkZC1idG4nKTtcblxuXG5cbmNvbnN0IHRhc2tEaWFsb2cgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndGFzay1kaWFsb2cnKTtcbmNvbnN0IGZvbGRlckRpYWxvZyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdmb2xkZXItZGlhbG9nJyk7XG5cbnRhc2tEaWFsb2cuc2hvdygpO1xuXG5hZGRCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbigpIHtcbiAgICAvLyBUaGlzIHZlcnNpb24gdXNlcyBhcnJheXNcbiAgICAvLyBsZXQgdGFza0RldGFpbHMgPSBnZXRGb3JtSW5mbygpO1xuICAgIC8vIGNvbnN0IHRlc3RUYXNrID0gVGFzayh0YXNrRGV0YWlsc1swXSwgdGFza0RldGFpbHNbMV0sIHRhc2tEZXRhaWxzWzJdLCB0YXNrRGV0YWlsc1szXSk7XG4gICAgY29uc3Qge3Rhc2tUaXRsZSwgdGFza0Rlc2NyaXB0aW9uLCB0YXNrRHVlRGF0ZSwgdGFza1ByaW9yaXR5fSA9IGdldEZvcm1JbmZvKCk7XG5cbiAgICBjb25zdCB0ZXN0VGFzayA9IFRhc2sodGFza1RpdGxlLCB0YXNrRGVzY3JpcHRpb24sIHRhc2tEdWVEYXRlLCB0YXNrUHJpb3JpdHkpO1xuICAgIGNvbnNvbGUubG9nKHRlc3RUYXNrLnByaW50VGFzaygpKTtcbn0pXG5cbmdldEZvcm1JbmZvKCk7XG4vLyBjcmVhdGVUYXNrRWxlbWVudCh0YXNrMSk7XG5kaXNwbGF5Rm9sZGVyVGFza3MobWFpbkZvbGRlcik7XG5jcmVhdGVUYXNrRWxlbWVudCh0YXNrMSk7XG4iXSwibmFtZXMiOlsiZ2V0Rm9ybUluZm8iLCJmb3JtIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsInRhc2tUaXRsZUluRm9ybSIsImVsZW1lbnRzIiwidGFza0Rlc2NyaXB0aW9uSW5Gb3JtIiwidGFza0R1ZURhdGVJbkZvcm0iLCJ0YXNrUHJpb3JpdHlJbkZvcm0iLCJ0YXNrVGl0bGUiLCJ2YWx1ZSIsInRhc2tEZXNjcmlwdGlvbiIsInRhc2tEdWVEYXRlIiwidGFza1ByaW9yaXR5IiwiY29uc29sZSIsImxvZyIsIlRhc2siLCJ0aXRsZSIsImRlc2NyaXB0aW9uIiwiZHVlRGF0ZSIsInByaW9yaXR5IiwiY29tcGxldGVTdGF0ZSIsInRvU3RyaW5nIiwiY2hhbmdlUHJpb3JpdHkiLCJuZXdQcmlvcml0eSIsImdldENvbXBsZXRlU3RhdGUiLCJzZXRDb21wbGV0ZSIsImVkaXRUYXNrIiwibmV3VGl0bGUiLCJuZXdEZXNjcmlwdGlvbiIsIm5ld0R1ZURhdGUiLCJwcmludFRhc2siLCJGb2xkZXIiLCJ0YXNrcyIsImFkZFRhc2siLCJuZXdUYXNrTmFtZSIsInB1c2giLCJkaXNwbGF5VGFza3MiLCJpIiwibGVuZ3RoIiwiZGVsZXRlVGFzayIsImluZGV4Iiwic3BsaWNlIiwibWFpbkZvbGRlciIsInRhc2sxIiwidGFzazIiLCJ0YXNrMyIsInByb2oxIiwiYWRkQnRuIiwidGFza0RpYWxvZyIsInNob3ciLCJhZGRFdmVudExpc3RlbmVyIiwidGVzdFRhc2siLCJ0YXNrTmFtZSIsInRhc2tEaXYiLCJjcmVhdGVFbGVtZW50IiwidGFza1RpdGxlSW5EaXYiLCJ0YXNrRGVzY3JpcHRpb25JbkRpdiIsInRhc2tEdWVEYXRlSW5EaXYiLCJ0YXNrUHJpb3JpdHlJbkRpdiIsImNsYXNzTGlzdCIsImFkZCIsInRleHRDb250ZW50IiwiYXBwZW5kQ2hpbGQiLCJjcmVhdGVUYXNrRWxlbWVudCJdLCJzb3VyY2VSb290IjoiIn0=