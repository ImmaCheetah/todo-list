(()=>{"use strict";function e(){const e=document.getElementById("main-form"),t=e.elements["task-title"],n=e.elements["task-description"],o=e.elements["task-due-date"],a=e.elements["task-priority"];let s=t.value,d=n.value,i=o.value,l=a.value;return console.log(s),console.log("dom works"),{taskTitle:s,taskDescription:d,taskDueDate:i,taskPriority:l}}function t(e,t,n,o){let a=!1;e=e.toString(),t=t.toString();const s=e=>{o=e};return{get title(){return e},get description(){return t},get dueDate(){return n},get priority(){return o},getCompleteState:()=>a,setComplete:()=>{a=!0},changePriority:s,editTask:(o,a,d,i)=>{e=o,t=a,n=d,s(i)},printTask:()=>{console.log(`Task title - ${e}, Desc - ${t}, Date - ${n}, Priority - ${o}`)}}}function n(e){let t=[];return{title:e,tasks:t,addTask:e=>{t.push(e)},displayTasks:()=>{for(let e=0;e<t.length;e++)console.log(`Task ${e} - ${t[e].title}, ${t[e].dueDate}, ${t[e].priority}`)},deleteTask:e=>{t.splice(e,1)}}}const o=function(){let e=[];return{folders:e,addFolder:t=>{e.push(t)},deleteFolder:t=>{e.splice(t,1)}}}(),a=n("Inbox"),s=t("chores","wash dishes","nov 23","high"),d=t("movies","avatar","nov 29","med"),i=t("coding","todo list","dec 10","low"),l=n("project 1");n("project 2"),s.editTask("new thing","another new thing","new date","HIGH"),l.addTask(s),s.printTask(),l.addTask(d),a.addTask(i),a.addTask(d),a.addTask(s),a.displayTasks(),o.addFolder(a),console.log(o);const r=document.getElementById("task-add-btn"),c=(document.getElementById("header"),document.getElementById("task-dialog"));document.getElementById("folder-dialog"),c.show(),r.addEventListener("click",(function(){const{taskTitle:n,taskDescription:o,taskDueDate:a,taskPriority:s}=e(),d=t(n,o,a,s);console.log(d.printTask())})),e(),a.tasks.forEach((e=>{!function(e,t){let n=function(e){const t=document.createElement("div"),n=document.createElement("p"),o=document.createElement("p"),a=document.createElement("p"),s=document.createElement("p");return t.classList.add("task-div"),n.textContent=e.title,o.textContent=e.description,a.textContent=e.dueDate,s.textContent=e.priority,t.appendChild(n),t.appendChild(o),t.appendChild(a),t.appendChild(s),t}(e);document.getElementById(["task-container"]).appendChild(n)}(e)}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,