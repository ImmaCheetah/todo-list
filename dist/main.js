(()=>{"use strict";function e(e,t,n,o){let d=!1;e=e.toString(),t=t.toString();const a=e=>{o=e};return{get title(){return e},get description(){return t},get dueDate(){return n},get priority(){return o},getCompleteState:()=>d,setComplete:()=>{d=!0},changePriority:a,editTask:(o,d,s,i)=>{e=o,t=d,n=s,a(i)},printTask:()=>{console.log(`Task title - ${e}, Desc - ${t}, Date - ${n}, Priority - ${o}`)}}}function t(e){let t=[];return{title:e,tasks:t,addTask:e=>{t.push(e)},displayTasks:()=>{for(let e=0;e<t.length;e++)console.log(`Task ${e} - ${t[e].title}, ${t[e].dueDate}, ${t[e].priority}`)},deleteTask:e=>{t.splice(e,1)}}}function n(){const e=document.getElementById("main-form"),t=e.elements["task-title"],n=e.elements["task-description"],o=e.elements["task-due-date"],d=e.elements["task-priority"];let a=t.value,s=n.value,i=o.value,l=d.value;return console.log(a),console.log("dom works"),{taskTitle:a,taskDescription:s,taskDueDate:i,taskPriority:l}}const o=function(){let e=[];return{folders:e,addFolder:t=>{e.push(t)},deleteFolder:t=>{e.splice(t,1)}}}(),d=t("Inbox"),a=e("chores","wash dishes","nov 23","high"),s=e("movies","avatar","nov 29","med"),i=e("coding","todo list","dec 10","low"),l=t("project 1");t("project 2"),a.editTask("new thing","another new thing","new date","HIGH"),l.addTask(a),a.printTask(),l.addTask(s),d.addTask(i),d.addTask(s),d.addTask(a),d.displayTasks(),o.addFolder(d),console.log(o);const r=document.getElementById("task-add-btn");document.getElementById("header"),document.getElementById("task-dialog").show(),r.addEventListener("click",(function(){const{taskTitle:t,taskDescription:o,taskDueDate:d,taskPriority:a}=n(),s=e(t,o,d,a);console.log(s.printTask())})),n(),d.tasks.forEach((e=>{!function(e,t){let n=function(e){const t=document.createElement("div"),n=document.createElement("p"),o=document.createElement("p"),d=document.createElement("p"),a=document.createElement("p");return t.classList.add("task-div"),n.textContent=e.title,o.textContent=e.description,d.textContent=e.dueDate,a.textContent=e.priority,t.appendChild(n),t.appendChild(o),t.appendChild(d),t.appendChild(a),t}(e);document.getElementById(t).appendChild(n)}(e,["task-container"])})),o.folders.forEach((e=>{!function(e){let t=function(e){const t=document.createElement("div"),n=document.createElement("button");return t.classList.add("folder-div"),n.textContent=e.title,t.appendChild(n),t}(e);document.querySelector(".sidebar").appendChild(t)}(e)})),document.getElementById("folder-add-btn").addEventListener("click",(function(){document.getElementById("folder-dialog").show()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,