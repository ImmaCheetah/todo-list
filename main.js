(()=>{"use strict";function t(){const t=document.getElementById("main-form"),e=t.elements["task-title"],s=t.elements["task-description"],n=t.elements["task-due-date"],a=t.elements["task-priority"];let o=e.value,i=s.value,r=n.value,l=a.value;return console.log(o),console.log("dom works"),{taskTitle:o,taskDescription:i,taskDueDate:r,taskPriority:l}}function e(t,e,s,n){t=t.toString(),e=e.toString();const a=t=>{n=t};return{get title(){return t},get description(){return e},get dueDate(){return s},get priority(){return n},changePriority:a,editTask:(n,o,i,r)=>{t=n,e=o,s=i,a(r)},printTask:()=>{console.log(`Task title - ${t}, Desc - ${e}, Date - ${s}, Priority - ${n}`)}}}function s(t){let e=[];return{title:t,tasks:e,addTask:t=>{e.push(t)},displayTasks:()=>{for(let t=0;t<e.length;t++)console.log(`Task ${t} - ${e[t].title}, ${e[t].dueDate}, ${e[t].priority}`)},deleteTask:t=>{e.splice(t,1)}}}const n=s("Inbox"),a=e("chores","wash dishes","nov 23","high"),o=e("movies","avatar","nov 29","med"),i=e("coding","todo list","dec 10","low"),r=s("project 1");s("project 2"),a.editTask("new thing","another new thing","new date","HIGH"),r.addTask(a),a.printTask(),r.addTask(o),r.displayTasks(),r.deleteTask(1),r.displayTasks(),n.addTask(i),n.displayTasks();const l=document.getElementById("add-btn");document.getElementById("dialog").show(),l.addEventListener("click",(function(){const{taskTitle:s,taskDescription:n,taskDueDate:a,taskPriority:o}=t(),i=e(s,n,a,o);console.log(i.printTask())})),t()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,